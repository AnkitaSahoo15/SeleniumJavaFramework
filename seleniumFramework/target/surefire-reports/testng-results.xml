<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="12" passed="0" failed="0" skipped="12">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-11T05:18:26Z" name="Command line suite" finished-at="2019-07-11T05:18:27Z" duration-ms="27">
    <groups>
    </groups>
    <test started-at="2019-07-11T05:18:26Z" name="Command line test" finished-at="2019-07-11T05:18:27Z" duration-ms="27">
      <class name="listeners.TestNGListenerDemo2">
        <test-method signature="test5()[pri:0, instance:listeners.TestNGListenerDemo2@4c762604]" started-at="2019-07-11T10:48:27Z" name="test5" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test6()[pri:0, instance:listeners.TestNGListenerDemo2@4c762604]" started-at="2019-07-11T10:48:27Z" name="test6" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method signature="test8()[pri:0, instance:listeners.TestNGListenerDemo2@4c762604]" started-at="2019-07-11T10:48:27Z" name="test8" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method signature="test7()[pri:0, instance:listeners.TestNGListenerDemo2@4c762604]" started-at="2019-07-11T10:48:27Z" name="test7" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
      </class> <!-- listeners.TestNGListenerDemo2 -->
      <class name="learning.TestNGMulti">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:learning.TestNGMulti@4d1b0d2a]" started-at="2019-07-11T10:48:26Z" name="setUp" finished-at="2019-07-11T10:48:26Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browserName' is required by @Configuration on method setUp but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browserName' is required by @Configuration on method setUp but has not been marked @Optional or defined

	at org.testng.internal.Parameters.createParameters(Parameters.java:155)
	at org.testng.internal.Parameters.createParameters(Parameters.java:355)
	at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:86)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:199)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test1()[pri:0, instance:learning.TestNGMulti@4d1b0d2a]" started-at="2019-07-11T10:48:27Z" name="test1" finished-at="2019-07-11T10:48:27Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:learning.TestNGMulti@4d1b0d2a]" started-at="2019-07-11T10:48:27Z" name="tearDown" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- learning.TestNGMulti -->
      <class name="listeners.TestNGListenerDemo">
        <test-method signature="test1()[pri:0, instance:listeners.TestNGListenerDemo@10a035a0]" started-at="2019-07-11T10:48:26Z" name="test1" finished-at="2019-07-11T10:48:26Z" duration-ms="4" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:listeners.TestNGListenerDemo@10a035a0]" started-at="2019-07-11T10:48:26Z" name="test2" finished-at="2019-07-11T10:48:26Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:listeners.TestNGListenerDemo@10a035a0]" started-at="2019-07-11T10:48:26Z" name="test3" finished-at="2019-07-11T10:48:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4()[pri:0, instance:listeners.TestNGListenerDemo@10a035a0]" started-at="2019-07-11T10:48:26Z" name="test4" finished-at="2019-07-11T10:48:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- listeners.TestNGListenerDemo -->
      <class name="learning.TestNGPriority">
        <test-method signature="test2()[pri:0, instance:learning.TestNGPriority@78ac1102]" started-at="2019-07-11T10:48:27Z" name="test2" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test1()[pri:0, instance:learning.TestNGPriority@78ac1102]" started-at="2019-07-11T10:48:27Z" name="test1" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test3()[pri:0, instance:learning.TestNGPriority@78ac1102]" started-at="2019-07-11T10:48:27Z" name="test3" finished-at="2019-07-11T10:48:27Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- learning.TestNGPriority -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
